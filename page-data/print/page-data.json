{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/print","result":{"data":{"deck":{"id":"8d1ef473-1e17-57e0-b6f5-943136c6e424","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Them UI\"), mdx(\"hr\", null), mdx(\"h1\", null, \"PROPS\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"simplicity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"theming\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"primitive elements\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"fast prototyping\")), mdx(\"hr\", null), mdx(\"h1\", null, \"CONS\"), mdx(\"p\", null, \"...\"), mdx(\"hr\", null), mdx(\"h1\", null, \"Shorthands\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"m, mx, my, p, px, py...\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"margin, margin-left/margin-right, ...\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pure css also have shorthands like \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"flex: <grow> <shrink> <basis>\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"padding: <top> <right> <bottom> <left>\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"something developer needs to learn, but once he is familiar with the syntax it really speed up development\")), mdx(\"hr\", null), mdx(\"h1\", null, \"sx prop\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"how to use it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"what to avoid\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"when creating new styled component put it after \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{...rest}\"), \" (explain why!)\")), mdx(\"hr\", null), mdx(\"h1\", null, \"__themeKey prop\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/system-ui/theme-ui/blob/97442315be268ff052fb275ddce73b4f614afb57/packages/components/src/Box.js#L14\"\n  }), \"https://github.com/system-ui/theme-ui/blob/97442315be268ff052fb275ddce73b4f614afb57/packages/components/src/Box.js#L14\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"when and why to use it\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"export to normal CSS\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/system-ui/theme-ui/tree/master/packages/tachyons\"\n  }), \"https://github.com/system-ui/theme-ui/tree/master/packages/tachyons\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The best of both worlds\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"__css prop\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/system-ui/theme-ui/blob/97442315be268ff052fb275ddce73b4f614afb57/packages/components/src/Box.js#L13\"\n  }), \"https://github.com/system-ui/theme-ui/blob/97442315be268ff052fb275ddce73b4f614afb57/packages/components/src/Box.js#L13\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Dynamic props\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"don't use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"css\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sx\"), \" for props that are constantly changing (animations on user interaction), use native \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"style\"), \" prop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"example:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"transitioning \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x\"), \" value form \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"0\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"n\"), \" with JS (react-spring) and passing it to css method \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"(x) => css`transform: translateX(${x}px)`;\"), \" will create \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"n\"), \" css classes like \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"css-XXXXXX\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"this will hurt the performance\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"better use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<div style={{ transform: `translateX(${x}px)` }} />\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"this is not a problem with CSS-IN-JS, you'll use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"style\"), \" prop in vanilla js and css, why you think CSS-IN-JS is different\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"problem is that developers don't think!\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"Typography.js\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"using rems\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"why are rems better?\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Figma theme package\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Generate development-ready theme JSON files from Figma Styles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/jxnblk/figma-theme\"\n  }), \"https://github.com/jxnblk/figma-theme\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/system-ui/theme-ui/pull/95\"\n  }), \"https://github.com/system-ui/theme-ui/pull/95\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"WHO IS USING IT\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gatsby.js\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"@jxnblk (Author) got hired by gatsby\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"8d1ef473-1e17-57e0-b6f5-943136c6e424","slug":"","title":"PROPS"}}}